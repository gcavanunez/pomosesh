@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
	:root {
		--font-sans: Inter;
		--background: 0 0% 100%;
		--foreground: 222.2 47.4% 11.2%;

		--muted: 210 40% 96.1%;
		--muted-foreground: 215.4 16.3% 46.9%;

		--popover: 0 0% 100%;
		--popover-foreground: 222.2 47.4% 11.2%;

		--border: 214.3 31.8% 91.4%;
		--input: 214.3 31.8% 91.4%;

		--card: 0 0% 100%;
		--card-foreground: 222.2 47.4% 11.2%;
		/* hsl(221, 83%, 53%) */
		--primary: 221 83% 53%;
		--primary-foreground: 210 40% 98%;

		--secondary: 210 40% 96.1%;
		--secondary-foreground: 222.2 47.4% 11.2%;

		--accent: 210 40% 96.1%;
		--accent-foreground: 222.2 47.4% 11.2%;

		--destructive: 0 100% 50%;
		--destructive-foreground: 210 40% 98%;

		--ring: 215 20.2% 65.1%;

		--radius: 0.5rem;
	}

	.dark {
		--background: 224 71% 4%;
		--foreground: 213 31% 91%;

		--muted: 223 47% 11%;
		--muted-foreground: 215.4 16.3% 56.9%;

		--accent: 216 34% 17%;
		--accent-foreground: 210 40% 98%;

		--popover: 224 71% 4%;
		--popover-foreground: 215 20.2% 65.1%;

		--border: 216 34% 17%;
		--input: 216 34% 17%;

		--card: 224 71% 4%;
		--card-foreground: 213 31% 91%;

		--primary: 210 40% 98%;
		--primary-foreground: 222.2 47.4% 1.2%;

		--secondary: 222.2 47.4% 11.2%;
		--secondary-foreground: 210 40% 98%;

		--destructive: 0 63% 31%;
		--destructive-foreground: 210 40% 98%;

		--ring: 216 34% 17%;

		--radius: 0.5rem;
	}
}

@layer base {
	* {
		@apply border-border;
	}
	body {
		@apply bg-background text-foreground;
		font-feature-settings:
			'rlig' 1,
			'calt' 1;
	}
}
/*   IS-OPEN STATE   */
dialog[open] {
	translate: 0 0;
}

/*   EXIT STATE   */
dialog {
	transition:
		translate 0.7s ease-out,
		overlay 0.7s ease-out,
		display 0.7s ease-out allow-discrete;
	translate: 0 100vh;
}

/*   0. BEFORE-OPEN STATE   */
@starting-style {
	dialog[open] {
		translate: 0 100vh;
	}
}

.settings-popover {
	&:popover-open {
		/*   0. OPEN STATE   */
		/*  state when popover is open, BOTH:
        what we're transitioning *in* to 
        and transitioning *out* from */
		transform: translateY(0);
		opacity: 1;

		/*   1. BEFORE-OPEN STATE   */
		/*  initial state for what we're animating *in* from, 
        in this case: goes from lower (y + 20px) to center  */
		@starting-style {
			transform: translateY(20px);
			opacity: 0;
		}
	}

	/*   2. AFTER-OPEN-IS-CLOSED STATE   */
	/*  initial state for what we're animating *out* to , 
      in this case: goes from center to (y - 50px) higher */
	transform: translateY(-50px);
	opacity: 0;

	/*  enumarate transitioning properties, including display */
	transition:
		transform 0.5s,
		opacity 0.5s,
		display 0.5s allow-discrete;
}
.circular {
	transition: stroke-dashoffset 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}

@layer utilities {
	.scrollbars-hidden::-webkit-scrollbar {
		display: none;
	}
}
